package org.fossify.phone.extensions.ussd

import android.os.Bundle
import android.telephony.TelephonyManager
import android.view.View
import org.fossify.commons.activities.BaseSimpleActivity
import org.fossify.commons.extensions.*
import org.fossify.commons.helpers.NavigationIcon
import org.fossify.phone.R
import org.fossify.phone.databinding.ActivityCustomUssdBinding

/**
 * Actividad personalizada para mostrar informaci√≥n cuando se interceptan c√≥digos USSD
 */
class CustomUSSDActivity : BaseSimpleActivity() {
    
    private val binding by viewBinding(ActivityCustomUssdBinding::inflate)
    
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(binding.root)
        
        setupUI()
        loadUSSDInfo()
    }
    
    private fun setupUI() {
        updateMaterialActivityViews(
            mainCoordinatorLayout = binding.customUssdCoordinator,
            nestedScrollView = binding.customUssdNestedScrollview,
            useTransparentNavigation = true,
            useTopSearchMenu = false
        )
        
        setupMaterialScrollListener(binding.customUssdNestedScrollview, binding.customUssdToolbar)
        
        binding.customUssdToolbar.setNavigationOnClickListener {
            finish()
        }
    }
    
    private fun loadUSSDInfo() {
        val ussdCode = intent.getStringExtra("ussd_code") ?: ""
        val screenType = intent.getStringExtra("screen_type") ?: "generic"
        val title = intent.getStringExtra("title") ?: "Informaci√≥n USSD"
        val customMessage = intent.getStringExtra("custom_message") ?: ""
        
        // Configurar t√≠tulo
        binding.customUssdToolbar.title = title
        
        // Configurar informaci√≥n seg√∫n el tipo de pantalla
        when (screenType) {
            "imei" -> setupIMEIInfo(ussdCode, customMessage)
            "phone_info" -> setupPhoneInfo(ussdCode, customMessage)
            "service_monitor" -> setupServiceMonitor(ussdCode, customMessage)
            else -> setupGenericInfo(ussdCode, customMessage)
        }
    }
    
    private fun setupIMEIInfo(ussdCode: String, customMessage: String) {
        binding.apply {
            customUssdCode.text = "C√≥digo interceptado: $ussdCode"
            customUssdMessage.text = customMessage
            
            // Mostrar informaci√≥n real del IMEI si est√° disponible
            try {
                val telephonyManager = getSystemService(TELEPHONY_SERVICE) as TelephonyManager
                val imei = if (hasPermission(android.Manifest.permission.READ_PHONE_STATE)) {
                    telephonyManager.deviceId ?: "No disponible"
                } else {
                    "Permisos requeridos"
                }
                
                customUssdDetails.text = """
                    üì± INFORMACI√ìN DEL DISPOSITIVO
                    
                    IMEI: $imei
                    Modelo: ${android.os.Build.MODEL}
                    Fabricante: ${android.os.Build.MANUFACTURER}
                    Versi√≥n Android: ${android.os.Build.VERSION.RELEASE}
                    API Level: ${android.os.Build.VERSION.SDK_INT}
                    
                    ‚ö†Ô∏è Esta informaci√≥n ha sido interceptada por la extensi√≥n personalizada.
                    La pantalla est√°ndar del sistema ha sido reemplazada.
                """.trimIndent()
                
            } catch (e: Exception) {
                customUssdDetails.text = "Error al obtener informaci√≥n del dispositivo: ${e.message}"
            }
            
            customUssdDetails.visibility = View.VISIBLE
        }
    }
    
    private fun setupPhoneInfo(ussdCode: String, customMessage: String) {
        binding.apply {
            customUssdCode.text = "C√≥digo interceptado: $ussdCode"
            customUssdMessage.text = customMessage
            
            customUssdDetails.text = """
                üìû INFORMACI√ìN DEL TEL√âFONO
                
                Este c√≥digo normalmente abrir√≠a el men√∫ de pruebas del tel√©fono.
                
                Funcionalidades disponibles:
                ‚Ä¢ Informaci√≥n de la red
                ‚Ä¢ Estad√≠sticas de uso
                ‚Ä¢ Configuraci√≥n de radio
                ‚Ä¢ Informaci√≥n de la bater√≠a
                
                üîß La extensi√≥n ha interceptado este c√≥digo para mostrar
                informaci√≥n personalizada en lugar del men√∫ est√°ndar.
            """.trimIndent()
            
            customUssdDetails.visibility = View.VISIBLE
        }
    }
    
    private fun setupServiceMonitor(ussdCode: String, customMessage: String) {
        binding.apply {
            customUssdCode.text = "C√≥digo interceptado: $ussdCode"
            customUssdMessage.text = customMessage
            
            customUssdDetails.text = """
                üîç MONITOR DE SERVICIOS
                
                Este c√≥digo normalmente abrir√≠a el monitor de servicios de Google.
                
                Servicios monitoreados:
                ‚Ä¢ Google Talk Service Monitor
                ‚Ä¢ Estado de conexi√≥n
                ‚Ä¢ Logs de servicio
                ‚Ä¢ Informaci√≥n de red
                
                üìä La extensi√≥n proporciona un monitor personalizado
                con informaci√≥n adicional y controles avanzados.
            """.trimIndent()
            
            customUssdDetails.visibility = View.VISIBLE
        }
    }
    
    private fun setupGenericInfo(ussdCode: String, customMessage: String) {
        binding.apply {
            customUssdCode.text = "C√≥digo interceptado: $ussdCode"
            customUssdMessage.text = customMessage
            
            customUssdDetails.text = """
                ‚ÑπÔ∏è C√ìDIGO USSD INTERCEPTADO
                
                El c√≥digo $ussdCode ha sido interceptado por el sistema de extensiones.
                
                Esto significa que:
                ‚Ä¢ La respuesta est√°ndar del sistema ha sido bloqueada
                ‚Ä¢ Se muestra esta pantalla personalizada en su lugar
                ‚Ä¢ Puedes configurar qu√© informaci√≥n mostrar
                
                üõ†Ô∏è Puedes personalizar esta pantalla desde la configuraci√≥n
                de extensiones en los ajustes de la aplicaci√≥n.
            """.trimIndent()
            
            customUssdDetails.visibility = View.VISIBLE
        }
    }
}